{"ast":null,"code":"var _jsxFileName = \"/Users/ainkhm/Desktop/tga_test/src/components/tabs/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment, useState } from 'react';\nimport useStyles from './use-styles';\nimport clsx from 'clsx';\nimport { useMediaQuery } from 'react-responsive';\nimport { mobileSize } from '@/helpers/breakpoints';\nimport { CustomLink } from '@/components/link';\nexport default function Tabs(props) {\n  const styles = useStyles();\n  const {\n    0: active,\n    1: setActive\n  } = useState(0);\n  const data = props.data;\n  const isMobile = useMediaQuery(mobileSize);\n  return __jsx(\"div\", {\n    className: styles.tabsWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.tabsControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }, data.map((item, index) => __jsx(TabItem, _extends({\n    key: item.id,\n    index: index,\n    title: item.title,\n    onItemClicked: () => setActive(index),\n    isActive: active === index\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }\n  })))), !isMobile && __jsx(\"div\", {\n    className: styles.tabsView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, data.map((item, index) => {\n    if (active === index) {\n      return __jsx(\"div\", {\n        key: item.id,\n        className: clsx(styles.tabsViewItem, 'active'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, props.solutions ? __jsx(\"div\", {\n        className: \"viewRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: styles.paragraph,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }\n      }, item.description)) : item.tech.map((elem, index) => {\n        return __jsx(\"div\", {\n          className: \"viewRow\",\n          key: `tabs-${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 14\n          }\n        }, __jsx(CustomLink, {\n          title: item.link,\n          url: \"/#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }\n        }), __jsx(\"img\", {\n          className: styles.icon,\n          src: 'assets/icons/arrow-right.svg',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }\n        })), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 14\n          }\n        }, elem));\n      }));\n    }\n  })));\n}\n\nconst TabItem = ({\n  index = 0,\n  title = '',\n  onItemClicked = () => console.error('no action'),\n  isActive = false,\n  solutions = false,\n  data\n}) => {\n  const styles = useStyles();\n  const iconName = solutions ? 'solutions' : 'tech';\n  const isMobile = useMediaQuery(mobileSize);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: clsx(styles.tabsControlItem, isActive && 'active'),\n    onClick: onItemClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    src: `assets/icons/${iconName}-icon-${index}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), title, __jsx(\"div\", {\n    className: styles.chevron,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: 'assets/icons/chevron.svg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }))), isActive && isMobile && __jsx(\"div\", {\n    className: styles.dropDownMobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, data.map((item, itemIndex) => {\n    if (index === itemIndex) {\n      return __jsx(\"div\", {\n        className: clsx(styles.tabsViewItem, 'active'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, solutions ? __jsx(\"div\", {\n        className: \"viewRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: styles.paragraph,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 12\n        }\n      }, item.description)) : item.tech.map(elem => {\n        return __jsx(\"div\", {\n          className: \"viewRow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 14\n          }\n        }, __jsx(CustomLink, {\n          title: item.link,\n          url: \"/#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }\n        }), __jsx(\"img\", {\n          className: styles.icon,\n          src: 'assets/icons/arrow-right.svg',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }\n        })), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 14\n          }\n        }, elem));\n      }));\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/ainkhm/Desktop/tga_test/src/components/tabs/index.js"],"names":["React","Fragment","useState","useStyles","clsx","useMediaQuery","mobileSize","CustomLink","Tabs","props","styles","active","setActive","data","isMobile","tabsWrap","tabsControl","map","item","index","id","title","tabsView","tabsViewItem","solutions","paragraph","description","tech","elem","link","icon","TabItem","onItemClicked","console","error","isActive","iconName","tabsControlItem","chevron","dropDownMobile","itemIndex"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport useStyles from './use-styles';\nimport clsx from 'clsx';\nimport { useMediaQuery } from 'react-responsive';\nimport { mobileSize } from '@/helpers/breakpoints';\nimport { CustomLink } from '@/components/link';\n\nexport default function Tabs(props) {\n\tconst styles = useStyles();\n\tconst [active, setActive] = useState(0);\n\tconst data = props.data;\n\n\tconst isMobile = useMediaQuery(mobileSize);\n\n\treturn (\n\t\t<div className={styles.tabsWrap}>\n\t\t\t<div className={styles.tabsControl}>\n\t\t\t\t{data.map((item, index) => (\n\t\t\t\t\t<TabItem\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\ttitle={item.title}\n\t\t\t\t\t\tonItemClicked={() => setActive(index)}\n\t\t\t\t\t\tisActive={active === index}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t{!isMobile && (\n\t\t\t\t<div className={styles.tabsView}>\n\t\t\t\t\t{data.map((item, index) => {\n\t\t\t\t\t\tif (active === index) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\tclassName={clsx(styles.tabsViewItem, 'active')}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{props.solutions ? (\n\t\t\t\t\t\t\t\t\t\t<div className='viewRow'>\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.paragraph}>{item.description}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\titem.tech.map((elem, index) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='viewRow' key={`tabs-${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomLink title={item.link} url='/#' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.icon}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={'assets/icons/arrow-right.svg'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{elem}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nconst TabItem = ({\n\tindex = 0,\n\ttitle = '',\n\tonItemClicked = () => console.error('no action'),\n\tisActive = false,\n\tsolutions = false,\n\tdata,\n}) => {\n\tconst styles = useStyles();\n\tconst iconName = solutions ? 'solutions' : 'tech';\n\tconst isMobile = useMediaQuery(mobileSize);\n\treturn (\n\t\t<Fragment>\n\t\t\t<div\n\t\t\t\tclassName={clsx(styles.tabsControlItem, isActive && 'active')}\n\t\t\t\tonClick={onItemClicked}\n\t\t\t>\n\t\t\t\t<img src={`assets/icons/${iconName}-icon-${index}.svg`} />\n\t\t\t\t{title}\n\t\t\t\t<div className={styles.chevron}>\n\t\t\t\t\t<img src={'assets/icons/chevron.svg'} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{isActive && isMobile && (\n\t\t\t\t<div className={styles.dropDownMobile}>\n\t\t\t\t\t{data.map((item, itemIndex) => {\n\t\t\t\t\t\tif (index === itemIndex) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className={clsx(styles.tabsViewItem, 'active')}>\n\t\t\t\t\t\t\t\t\t{solutions ? (\n\t\t\t\t\t\t\t\t\t\t<div className='viewRow'>\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.paragraph}>{item.description}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\titem.tech.map((elem) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='viewRow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomLink title={item.link} url='/#' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.icon}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={'assets/icons/arrow-right.svg'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{elem}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}