{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport color from 'color';\nexport const sizes = {\n  xs: 320,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n};\n\nfunction media(min, max) {\n  min = sizes[min] || min;\n  max = sizes[max] || max;\n  min = min && `(min-width: ${min}px)`;\n  max = max && `(max-width: ${max}px)`;\n  return `@media ${[min, max].filter(Boolean).join(' and ')}`;\n}\n\nexport default {\n  media: _objectSpread({\n    xs_: media('xs'),\n    sm_: media('sm'),\n    md_: media('md'),\n    lg_: media('lg'),\n    xl_: media('xl'),\n    _xs: media(null, 'xs'),\n    _sm: media(null, 'sm'),\n    _md: media(null, 'md'),\n    _lg: media(null, 'lg'),\n    _xl: media(null, 'xl'),\n    xs_sm: media('xs', 'sm'),\n    sm_md: media('sm', 'md'),\n    md_lg: media('md', 'lg'),\n    lg_xl: media('lg', 'xl'),\n    custom: media\n  }, sizes),\n  colors: {\n    white: color('#FFFFFF'),\n    black: color('#000000'),\n    primary: color('#118ae0'),\n    navyBlue: color('#1e2f78'),\n    darkGray: color('#202124'),\n    lightGray: color('#d9d9d9')\n  },\n  gradients: {\n    primary: `linear-gradient(270deg, rgba(17, 138, 224, 0.1) 0%, #1e2f78 100%)`,\n    secondary: `linear-gradient(90.33deg, #1e2f78 0.27%, #118ae0 96.55%)`,\n    white: `linear-gradient(to right, rgba(255,255,255,0) 0%,rgba(255,255,255,1) 100%)`,\n    gray: `rgba(32, 33, 36, 0.04)`\n  }\n};","map":{"version":3,"sources":["/Users/ainkhm/Desktop/tga_test/src/config/jss/theme.js"],"names":["color","sizes","xs","sm","md","lg","xl","media","min","max","filter","Boolean","join","xs_","sm_","md_","lg_","xl_","_xs","_sm","_md","_lg","_xl","xs_sm","sm_md","md_lg","lg_xl","custom","colors","white","black","primary","navyBlue","darkGray","lightGray","gradients","secondary","gray"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG;AACpBC,EAAAA,EAAE,EAAE,GADgB;AAEpBC,EAAAA,EAAE,EAAE,GAFgB;AAGpBC,EAAAA,EAAE,EAAE,GAHgB;AAIpBC,EAAAA,EAAE,EAAE,IAJgB;AAKpBC,EAAAA,EAAE,EAAE;AALgB,CAAd;;AAQP,SAASC,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyB;AACxBD,EAAAA,GAAG,GAAGP,KAAK,CAACO,GAAD,CAAL,IAAcA,GAApB;AACAC,EAAAA,GAAG,GAAGR,KAAK,CAACQ,GAAD,CAAL,IAAcA,GAApB;AACAD,EAAAA,GAAG,GAAGA,GAAG,IAAK,eAAcA,GAAI,KAAhC;AACAC,EAAAA,GAAG,GAAGA,GAAG,IAAK,eAAcA,GAAI,KAAhC;AAEA,SAAQ,UAAS,CAACD,GAAD,EAAMC,GAAN,EAAWC,MAAX,CAAkBC,OAAlB,EAA2BC,IAA3B,CAAgC,OAAhC,CAAyC,EAA1D;AACA;;AAED,eAAe;AACdL,EAAAA,KAAK;AACJM,IAAAA,GAAG,EAAEN,KAAK,CAAC,IAAD,CADN;AAEJO,IAAAA,GAAG,EAAEP,KAAK,CAAC,IAAD,CAFN;AAGJQ,IAAAA,GAAG,EAAER,KAAK,CAAC,IAAD,CAHN;AAIJS,IAAAA,GAAG,EAAET,KAAK,CAAC,IAAD,CAJN;AAKJU,IAAAA,GAAG,EAAEV,KAAK,CAAC,IAAD,CALN;AAMJW,IAAAA,GAAG,EAAEX,KAAK,CAAC,IAAD,EAAO,IAAP,CANN;AAOJY,IAAAA,GAAG,EAAEZ,KAAK,CAAC,IAAD,EAAO,IAAP,CAPN;AAQJa,IAAAA,GAAG,EAAEb,KAAK,CAAC,IAAD,EAAO,IAAP,CARN;AASJc,IAAAA,GAAG,EAAEd,KAAK,CAAC,IAAD,EAAO,IAAP,CATN;AAUJe,IAAAA,GAAG,EAAEf,KAAK,CAAC,IAAD,EAAO,IAAP,CAVN;AAWJgB,IAAAA,KAAK,EAAEhB,KAAK,CAAC,IAAD,EAAO,IAAP,CAXR;AAYJiB,IAAAA,KAAK,EAAEjB,KAAK,CAAC,IAAD,EAAO,IAAP,CAZR;AAaJkB,IAAAA,KAAK,EAAElB,KAAK,CAAC,IAAD,EAAO,IAAP,CAbR;AAcJmB,IAAAA,KAAK,EAAEnB,KAAK,CAAC,IAAD,EAAO,IAAP,CAdR;AAeJoB,IAAAA,MAAM,EAAEpB;AAfJ,KAgBDN,KAhBC,CADS;AAoBd2B,EAAAA,MAAM,EAAE;AACPC,IAAAA,KAAK,EAAE7B,KAAK,CAAC,SAAD,CADL;AAEP8B,IAAAA,KAAK,EAAE9B,KAAK,CAAC,SAAD,CAFL;AAGP+B,IAAAA,OAAO,EAAE/B,KAAK,CAAC,SAAD,CAHP;AAIPgC,IAAAA,QAAQ,EAAEhC,KAAK,CAAC,SAAD,CAJR;AAKPiC,IAAAA,QAAQ,EAAEjC,KAAK,CAAC,SAAD,CALR;AAMPkC,IAAAA,SAAS,EAAElC,KAAK,CAAC,SAAD;AANT,GApBM;AA4BdmC,EAAAA,SAAS,EAAE;AACVJ,IAAAA,OAAO,EAAG,mEADA;AAEVK,IAAAA,SAAS,EAAG,0DAFF;AAGVP,IAAAA,KAAK,EAAG,4EAHE;AAIVQ,IAAAA,IAAI,EAAG;AAJG;AA5BG,CAAf","sourcesContent":["import color from 'color';\n\nexport const sizes = {\n\txs: 320,\n\tsm: 600,\n\tmd: 960,\n\tlg: 1280,\n\txl: 1920,\n};\n\nfunction media(min, max) {\n\tmin = sizes[min] || min;\n\tmax = sizes[max] || max;\n\tmin = min && `(min-width: ${min}px)`;\n\tmax = max && `(max-width: ${max}px)`;\n\n\treturn `@media ${[min, max].filter(Boolean).join(' and ')}`;\n}\n\nexport default {\n\tmedia: {\n\t\txs_: media('xs'),\n\t\tsm_: media('sm'),\n\t\tmd_: media('md'),\n\t\tlg_: media('lg'),\n\t\txl_: media('xl'),\n\t\t_xs: media(null, 'xs'),\n\t\t_sm: media(null, 'sm'),\n\t\t_md: media(null, 'md'),\n\t\t_lg: media(null, 'lg'),\n\t\t_xl: media(null, 'xl'),\n\t\txs_sm: media('xs', 'sm'),\n\t\tsm_md: media('sm', 'md'),\n\t\tmd_lg: media('md', 'lg'),\n\t\tlg_xl: media('lg', 'xl'),\n\t\tcustom: media,\n\t\t...sizes,\n\t},\n\n\tcolors: {\n\t\twhite: color('#FFFFFF'),\n\t\tblack: color('#000000'),\n\t\tprimary: color('#118ae0'),\n\t\tnavyBlue: color('#1e2f78'),\n\t\tdarkGray: color('#202124'),\n\t\tlightGray: color('#d9d9d9'),\n\t},\n\tgradients: {\n\t\tprimary: `linear-gradient(270deg, rgba(17, 138, 224, 0.1) 0%, #1e2f78 100%)`,\n\t\tsecondary: `linear-gradient(90.33deg, #1e2f78 0.27%, #118ae0 96.55%)`,\n\t\twhite: `linear-gradient(to right, rgba(255,255,255,0) 0%,rgba(255,255,255,1) 100%)`,\n\t\tgray: `rgba(32, 33, 36, 0.04)`,\n\t},\n};\n"]},"metadata":{},"sourceType":"module"}