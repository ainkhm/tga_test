{"ast":null,"code":"var _jsxFileName = \"/Users/ainkhm/Desktop/tga_test/src/components/filters/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport useStyles from './use-styles';\nimport { useMediaQuery } from 'react-responsive';\nimport { mobileSize } from '@/helpers/breakpoints';\nimport { Description1 } from '@/components/typography';\nimport { selectAll } from 'css-select';\nexport default function Filters({\n  title,\n  data\n}) {\n  const ref = useRef(null);\n  const styles = useStyles();\n  const {\n    0: checked,\n    1: setChecked\n  } = useState([]);\n  const {\n    0: showAll,\n    1: setShowAll\n  } = useState(false);\n  const {\n    0: width,\n    1: setWidth\n  } = useState(null);\n  const isMobile = useMediaQuery(mobileSize);\n\n  const setFilter = e => {\n    const {\n      index\n    } = e.currentTarget.dataset;\n    const clikedItem = Number(index);\n\n    if (showAll) {\n      setShowAll(false);\n    }\n\n    const filtersToggling = checked.includes(clikedItem) ? checked.filter(i => i != clikedItem) // remove item\n    : [...checked, Number(index)]; // add item\n\n    setChecked(filtersToggling);\n  };\n\n  const all = () => {\n    setChecked([]);\n    setShowAll(!showAll);\n  };\n\n  const computedRowWidth = Boolean(Object.keys(data).length > 4);\n  useEffect(() => {\n    const blockWidth = ref.current ? ref.current.offsetWidth : 0;\n    const computed = blockWidth / 2 + 30;\n    setWidth(computed);\n  }, []);\n  return __jsx(\"div\", {\n    className: styles.filters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, __jsx(Description1, {\n    className: styles.textBolder,\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }), __jsx(\"ul\", {\n    className: styles.filtersList,\n    style: isMobile ? {\n      width: '100%'\n    } : {\n      width: computedRowWidth ? width : 'auto'\n    },\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    id: \"all\",\n    className: styles.filterItem,\n    type: \"checkbox\",\n    checked: showAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"all\",\n    onClick: all,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, \"All\")), data.map((filter, index) => {\n    return __jsx(Filter, {\n      key: filter,\n      item: filter,\n      all: showAll,\n      index: index,\n      status: checked.includes(index),\n      onClick: setFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    });\n  })));\n}\n\nfunction Filter({\n  index,\n  item,\n  status,\n  onClick\n}) {\n  const styles = useStyles();\n  return __jsx(\"li\", {\n    key: `filter-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }\n  }, __jsx(\"input\", {\n    id: index,\n    className: styles.filterItem,\n    type: \"checkbox\",\n    checked: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }\n  }), __jsx(\"label\", {\n    htmlFor: index,\n    onClick: onClick,\n    \"data-index\": index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }, item));\n}","map":{"version":3,"sources":["/Users/ainkhm/Desktop/tga_test/src/components/filters/index.js"],"names":["React","useState","useEffect","useRef","useStyles","useMediaQuery","mobileSize","Description1","selectAll","Filters","title","data","ref","styles","checked","setChecked","showAll","setShowAll","width","setWidth","isMobile","setFilter","e","index","currentTarget","dataset","clikedItem","Number","filtersToggling","includes","filter","i","all","computedRowWidth","Boolean","Object","keys","length","blockWidth","current","offsetWidth","computed","filters","textBolder","filtersList","filterItem","map","Filter","item","status","onClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useStyles from './use-styles';\nimport { useMediaQuery } from 'react-responsive';\nimport { mobileSize } from '@/helpers/breakpoints';\nimport { Description1 } from '@/components/typography';\nimport { selectAll } from 'css-select';\n\nexport default function Filters({ title, data }) {\n\tconst ref = useRef(null);\n\tconst styles = useStyles();\n\n\tconst [checked, setChecked] = useState([]);\n\tconst [showAll, setShowAll] = useState(false);\n\tconst [width, setWidth] = useState(null);\n\n\tconst isMobile = useMediaQuery(mobileSize);\n\n\tconst setFilter = (e) => {\n\t\tconst { index } = e.currentTarget.dataset;\n\t\tconst clikedItem = Number(index);\n\n\t\tif (showAll) {\n\t\t\tsetShowAll(false);\n\t\t}\n\t\tconst filtersToggling = checked.includes(clikedItem)\n\t\t\t? checked.filter((i) => i != clikedItem) // remove item\n\t\t\t: [...checked, Number(index)]; // add item\n\n\t\tsetChecked(filtersToggling);\n\t};\n\n\tconst all = () => {\n\t\tsetChecked([]);\n\t\tsetShowAll(!showAll);\n\t};\n\n\tconst computedRowWidth = Boolean(Object.keys(data).length > 4);\n\n\tuseEffect(() => {\n\t\tconst blockWidth = ref.current ? ref.current.offsetWidth : 0;\n\t\tconst computed = blockWidth / 2 + 30;\n\t\tsetWidth(computed);\n\t}, []);\n\n\treturn (\n\t\t<div className={styles.filters}>\n\t\t\t<Description1 className={styles.textBolder} title={title} />\n\t\t\t<ul\n\t\t\t\tclassName={styles.filtersList}\n\t\t\t\tstyle={\n\t\t\t\t\tisMobile\n\t\t\t\t\t\t? { width: '100%' }\n\t\t\t\t\t\t: { width: computedRowWidth ? width : 'auto' }\n\t\t\t\t}\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t<li>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='all'\n\t\t\t\t\t\tclassName={styles.filterItem}\n\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\tchecked={showAll}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor='all' onClick={all}>\n\t\t\t\t\t\tAll\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\t\t\t\t{data.map((filter, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Filter\n\t\t\t\t\t\t\tkey={filter}\n\t\t\t\t\t\t\titem={filter}\n\t\t\t\t\t\t\tall={showAll}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tstatus={checked.includes(index)}\n\t\t\t\t\t\t\tonClick={setFilter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nfunction Filter({ index, item, status, onClick }) {\n\tconst styles = useStyles();\n\n\treturn (\n\t\t<li key={`filter-${index}`}>\n\t\t\t<input\n\t\t\t\tid={index}\n\t\t\t\tclassName={styles.filterItem}\n\t\t\t\ttype='checkbox'\n\t\t\t\tchecked={status}\n\t\t\t/>\n\t\t\t<label htmlFor={index} onClick={onClick} data-index={index}>\n\t\t\t\t{item}\n\t\t\t</label>\n\t\t</li>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}