{"ast":null,"code":"import * as C from '../types';\nimport { get } from '../api';\nexport const getTeamList = () => async dispatch => {\n  dispatch({\n    type: C.FETCH_TEAM_LIST\n  });\n\n  try {\n    const {\n      data\n    } = await get('/team/getList');\n    dispatch({\n      type: C.FINISHED_FETCH_TEAM_LIST,\n      data\n    });\n  } catch (error) {\n    dispatch({\n      type: C.ERROR_FETCH_TEAM_LIST,\n      error\n    });\n  }\n};\nexport const getTeamAll = () => async dispatch => {\n  dispatch({\n    type: C.FETCH_TEAM_ALL\n  });\n\n  try {\n    const {\n      data\n    } = await get('/team/getAll');\n    dispatch({\n      type: C.FINISHED_FETCH_TEAM_ALL,\n      data\n    });\n  } catch (error) {\n    dispatch({\n      type: C.ERROR_FETCH_TEAM_ALL,\n      error\n    });\n  }\n};\nexport const getTeamMember = memberId => async dispatch => {\n  dispatch({\n    type: C.FETCH_TEAM_MEMBER\n  });\n\n  try {\n    const {\n      data\n    } = await get(`/team/member_${memberId}`);\n    dispatch({\n      type: C.FINISHED_FETCH_TEAM_MEMBER,\n      data\n    });\n  } catch (error) {\n    dispatch({\n      type: C.ERROR_FETCH_TEAM_MEMBER,\n      error\n    });\n  }\n};\nexport const getTeamCount = () => async dispatch => {\n  dispatch({\n    type: C.FETCH_TEAM_COUNT\n  });\n\n  try {\n    const {\n      data\n    } = await get('team/count');\n    dispatch({\n      type: C.FINISHED_FETCH_TEAM_COUNT,\n      data\n    });\n  } catch (error) {\n    dispatch({\n      type: C.ERROR_FETCH_TEAM_COUNT,\n      error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/ainkhm/Desktop/tga_test/src/actions/team.js"],"names":["C","get","getTeamList","dispatch","type","FETCH_TEAM_LIST","data","FINISHED_FETCH_TEAM_LIST","error","ERROR_FETCH_TEAM_LIST","getTeamAll","FETCH_TEAM_ALL","FINISHED_FETCH_TEAM_ALL","ERROR_FETCH_TEAM_ALL","getTeamMember","memberId","FETCH_TEAM_MEMBER","FINISHED_FETCH_TEAM_MEMBER","ERROR_FETCH_TEAM_MEMBER","getTeamCount","FETCH_TEAM_COUNT","FINISHED_FETCH_TEAM_COUNT","ERROR_FETCH_TEAM_COUNT"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,UAAnB;AACA,SAASC,GAAT,QAAoB,QAApB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEJ,CAAC,CAACK;AADA,GAAD,CAAR;;AAGA,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAAC,eAAD,CAA1B;AACAE,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEJ,CAAC,CAACO,wBADA;AAERD,MAAAA;AAFQ,KAAD,CAAR;AAIA,GAND,CAME,OAAOE,KAAP,EAAc;AACfL,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEJ,CAAC,CAACS,qBADA;AAERD,MAAAA;AAFQ,KAAD,CAAR;AAIA;AACD,CAhBM;AAkBP,OAAO,MAAME,UAAU,GAAG,MAAM,MAAOP,QAAP,IAAoB;AACnDA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEJ,CAAC,CAACW;AADA,GAAD,CAAR;;AAGA,MAAI;AACH,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAML,GAAG,CAAC,cAAD,CAA1B;AACAE,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEJ,CAAC,CAACY,uBADA;AAERN,MAAAA;AAFQ,KAAD,CAAR;AAIA,GAND,CAME,OAAOE,KAAP,EAAc;AACfL,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEJ,CAAC,CAACa,oBADA;AAERL,MAAAA;AAFQ,KAAD,CAAR;AAIA;AACD,CAhBM;AAkBP,OAAO,MAAMM,aAAa,GAAIC,QAAD,IAAc,MAAOZ,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEJ,CAAC,CAACgB;AADA,GAAD,CAAR;;AAGA,MAAI;AACH,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAML,GAAG,CAAE,gBAAec,QAAS,EAA1B,CAA1B;AACAZ,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEJ,CAAC,CAACiB,0BADA;AAERX,MAAAA;AAFQ,KAAD,CAAR;AAIA,GAND,CAME,OAAOE,KAAP,EAAc;AACfL,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEJ,CAAC,CAACkB,uBADA;AAERV,MAAAA;AAFQ,KAAD,CAAR;AAIA;AACD,CAhBM;AAkBP,OAAO,MAAMW,YAAY,GAAG,MAAM,MAAOhB,QAAP,IAAoB;AACrDA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAEJ,CAAC,CAACoB;AADA,GAAD,CAAR;;AAGA,MAAI;AACH,UAAM;AAAEd,MAAAA;AAAF,QAAW,MAAML,GAAG,CAAC,YAAD,CAA1B;AACAE,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEJ,CAAC,CAACqB,yBADA;AAERf,MAAAA;AAFQ,KAAD,CAAR;AAIA,GAND,CAME,OAAOE,KAAP,EAAc;AACfL,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEJ,CAAC,CAACsB,sBADA;AAERd,MAAAA;AAFQ,KAAD,CAAR;AAIA;AACD,CAhBM","sourcesContent":["import * as C from '../types';\nimport { get } from '../api';\n\nexport const getTeamList = () => async (dispatch) => {\n\tdispatch({\n\t\ttype: C.FETCH_TEAM_LIST,\n\t});\n\ttry {\n\t\tconst { data } = await get('/team/getList');\n\t\tdispatch({\n\t\t\ttype: C.FINISHED_FETCH_TEAM_LIST,\n\t\t\tdata,\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: C.ERROR_FETCH_TEAM_LIST,\n\t\t\terror,\n\t\t});\n\t}\n};\n\nexport const getTeamAll = () => async (dispatch) => {\n\tdispatch({\n\t\ttype: C.FETCH_TEAM_ALL,\n\t});\n\ttry {\n\t\tconst { data } = await get('/team/getAll');\n\t\tdispatch({\n\t\t\ttype: C.FINISHED_FETCH_TEAM_ALL,\n\t\t\tdata,\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: C.ERROR_FETCH_TEAM_ALL,\n\t\t\terror,\n\t\t});\n\t}\n};\n\nexport const getTeamMember = (memberId) => async (dispatch) => {\n\tdispatch({\n\t\ttype: C.FETCH_TEAM_MEMBER,\n\t});\n\ttry {\n\t\tconst { data } = await get(`/team/member_${memberId}`);\n\t\tdispatch({\n\t\t\ttype: C.FINISHED_FETCH_TEAM_MEMBER,\n\t\t\tdata,\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: C.ERROR_FETCH_TEAM_MEMBER,\n\t\t\terror,\n\t\t});\n\t}\n};\n\nexport const getTeamCount = () => async (dispatch) => {\n\tdispatch({\n\t\ttype: C.FETCH_TEAM_COUNT,\n\t});\n\ttry {\n\t\tconst { data } = await get('team/count');\n\t\tdispatch({\n\t\t\ttype: C.FINISHED_FETCH_TEAM_COUNT,\n\t\t\tdata,\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: C.ERROR_FETCH_TEAM_COUNT,\n\t\t\terror,\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}